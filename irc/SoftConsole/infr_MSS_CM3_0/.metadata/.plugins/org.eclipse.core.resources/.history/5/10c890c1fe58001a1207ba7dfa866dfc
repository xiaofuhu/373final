#include <stdio.h>
#include <stdlib.h>
#include <inttypes.h>
#include "drivers/mss_i2c/mss_i2c.h"

/*the target address is a 7 bit value! */
#define TARGET_ADDRESS    0xB0


int main()
{
	printf("Begin... \n\r");
	uint8_t transmit_buf0[] = { 0x30,0x01 };
	uint8_t transmit_buf1[] = { 0x30,0x08 };
	uint8_t transmit_buf2[] = { 0x06,0x90 };
	uint8_t transmit_buf3[] = { 0x08,0xC0 };
	uint8_t transmit_buf4[] = { 0x1A,0x40 };
	uint8_t transmit_buf5[] = { 0x33,0x33 };
	uint8_t receive_buf[16];

	MSS_I2C_init(&g_mss_i2c1 , TARGET_ADDRESS, MSS_I2C_PCLK_DIV_256 );

	MSS_I2C_write
	(
		&g_mss_i2c1,
		TARGET_ADDRESS,
		transmit_buf0,
		sizeof(transmit_buf0),
		MSS_I2C_RELEASE_BUS
	);
	MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);
	delay(10);

	MSS_I2C_write
	(
		&g_mss_i2c1,
		TARGET_ADDRESS,
		transmit_buf1,
		sizeof(transmit_buf1),
		MSS_I2C_RELEASE_BUS
	);
	MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);
	delay(10);

	MSS_I2C_write
	(
		&g_mss_i2c1,
		TARGET_ADDRESS,
		transmit_buf2,
		sizeof(transmit_buf2),
		MSS_I2C_RELEASE_BUS
	);
	MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);
	delay(10);

	MSS_I2C_write
	(
		&g_mss_i2c1,
		TARGET_ADDRESS,
		transmit_buf3,
		sizeof(transmit_buf3),
		MSS_I2C_RELEASE_BUS
	);
	MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);
	delay(10);

	MSS_I2C_write
	(
		&g_mss_i2c1,
		TARGET_ADDRESS,
		transmit_buf4,
		sizeof(transmit_buf4),
		MSS_I2C_RELEASE_BUS
	);
	MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);
	delay(10);

	MSS_I2C_write
	(
		&g_mss_i2c1,
		TARGET_ADDRESS,
		transmit_buf5,
		sizeof(transmit_buf5),
		MSS_I2C_RELEASE_BUS
	);
	MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);
	delay(10);

	uint8_t write_val[] = { 0x36 };
	while (1) {
		MSS_I2C_write
		(
			&g_mss_i2c1,
			TARGET_ADDRESS,
			write_val,
			sizeof(write_val),
			MSS_I2C_RELEASE_BUS
		);
		MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);

		MSS_I2C_read
		(
			&g_mss_i2c1,
			TARGET_ADDRESS,
			receive_buf,
			sizeof(receive_buf),
			MSS_I2C_RELEASE_BUS
		);
		MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT);

		int i = 0;
		for (; i < 16; ++i) {
			printf("%lu  ", receive_buf[i]);
		}
		printf("\n\r");

//		printf("HERE: %lu    %lu    %lu\n\r", x,y,s);
	}

	/* the following code is provided as an example I2C read */
	/*
	MSS_I2C_read
	(
	    	&g_mss_i2c1,
	    	TARGET_ADDRESS,
	    	receive_buf,
	    	sizeof(receive_buf),
	    	MSS_I2C_RELEASE_BUS
	 );
	 MSS_I2C_wait_complete(&g_mss_i2c1, MSS_I2C_NO_TIMEOUT); */


}

